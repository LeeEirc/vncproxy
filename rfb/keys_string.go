package rfb

import "fmt"

const keyName = "SpaceExclaimQuoteDblNumberSignDollarPercentAmpersandApostropheParenLeftParenRightAsteriskPlusCommaMinusPeriodSlashDigit0Digit1Digit2Digit3Digit4Digit5Digit6Digit7Digit8Digit9ColonSemicolonLessEqualGreaterQuestionAtABCDEFGHIJKLMNOPQRSTUVWXYZBracketLeftBackslashBracketRightAsciiCircumUnderscoreGraveSmallASmallBSmallCSmallDSmallESmallFSmallGSmallHSmallISmallJSmallKSmallLSmallMSmallNSmallOSmallPSmallQSmallRSmallSSmallTSmallUSmallVSmallWSmallXSmallYSmallZBraceLeftBarBraceRightAsciiTildeBackSpaceTabLinefeedClearReturnPauseScrollLockSysReqEscapeHomeLeftUpRightDownPageUpPageDownEndBeginSelectModeSwitchNumLockKeypadSpaceKeypadTabKeypadEnterKeypadF1KeypadF2KeypadF3KeypadF4KeypadHomeKeypadLeftKeypadUpKeypadRightKeypadDownKeypadPriorKeypadPageUpKeypadNextKeypadPageDownKeypadEndKeypadBeginKeypadInsertKeypadDeleteKeypadMultiplyKeypadAddKeypadSeparatorKeypadSubtractKeypadDecimalKeypadDivideKeypad0Keypad1Keypad2Keypad3Keypad4Keypad5Keypad6Keypad7Keypad8Keypad9KeypadEqualF1F2F3F4F5F6F7F8F9F10F11F12ShiftLeftShiftRightControlLeftControlRightCapsLockShiftLockMetaLeftMetaRightAltLeftAltRightSuperLeftSuperRightHyperLeftHyperRightDelete"

var keyMap = map[Key]string{
	32:    keyName[0:5],
	33:    keyName[5:12],
	34:    keyName[12:20],
	35:    keyName[20:30],
	36:    keyName[30:36],
	37:    keyName[36:43],
	38:    keyName[43:52],
	39:    keyName[52:62],
	40:    keyName[62:71],
	41:    keyName[71:81],
	42:    keyName[81:89],
	43:    keyName[89:93],
	44:    keyName[93:98],
	45:    keyName[98:103],
	46:    keyName[103:109],
	47:    keyName[109:114],
	48:    keyName[114:120],
	49:    keyName[120:126],
	50:    keyName[126:132],
	51:    keyName[132:138],
	52:    keyName[138:144],
	53:    keyName[144:150],
	54:    keyName[150:156],
	55:    keyName[156:162],
	56:    keyName[162:168],
	57:    keyName[168:174],
	58:    keyName[174:179],
	59:    keyName[179:188],
	60:    keyName[188:192],
	61:    keyName[192:197],
	62:    keyName[197:204],
	63:    keyName[204:212],
	64:    keyName[212:214],
	65:    keyName[214:215],
	66:    keyName[215:216],
	67:    keyName[216:217],
	68:    keyName[217:218],
	69:    keyName[218:219],
	70:    keyName[219:220],
	71:    keyName[220:221],
	72:    keyName[221:222],
	73:    keyName[222:223],
	74:    keyName[223:224],
	75:    keyName[224:225],
	76:    keyName[225:226],
	77:    keyName[226:227],
	78:    keyName[227:228],
	79:    keyName[228:229],
	80:    keyName[229:230],
	81:    keyName[230:231],
	82:    keyName[231:232],
	83:    keyName[232:233],
	84:    keyName[233:234],
	85:    keyName[234:235],
	86:    keyName[235:236],
	87:    keyName[236:237],
	88:    keyName[237:238],
	89:    keyName[238:239],
	90:    keyName[239:240],
	91:    keyName[240:251],
	92:    keyName[251:260],
	93:    keyName[260:272],
	94:    keyName[272:283],
	95:    keyName[283:293],
	96:    keyName[293:298],
	97:    keyName[298:304],
	98:    keyName[304:310],
	99:    keyName[310:316],
	100:   keyName[316:322],
	101:   keyName[322:328],
	102:   keyName[328:334],
	103:   keyName[334:340],
	104:   keyName[340:346],
	105:   keyName[346:352],
	106:   keyName[352:358],
	107:   keyName[358:364],
	108:   keyName[364:370],
	109:   keyName[370:376],
	110:   keyName[376:382],
	111:   keyName[382:388],
	112:   keyName[388:394],
	113:   keyName[394:400],
	114:   keyName[400:406],
	115:   keyName[406:412],
	116:   keyName[412:418],
	117:   keyName[418:424],
	118:   keyName[424:430],
	119:   keyName[430:436],
	120:   keyName[436:442],
	121:   keyName[442:448],
	122:   keyName[448:454],
	123:   keyName[454:463],
	124:   keyName[463:466],
	125:   keyName[466:476],
	126:   keyName[476:486],
	65288: keyName[486:495],
	65289: keyName[495:498],
	65290: keyName[498:506],
	65291: keyName[506:511],
	65293: keyName[511:517],
	65299: keyName[517:522],
	65300: keyName[522:532],
	65301: keyName[532:538],
	65307: keyName[538:544],
	65360: keyName[544:548],
	65361: keyName[548:552],
	65362: keyName[552:554],
	65363: keyName[554:559],
	65364: keyName[559:563],
	65365: keyName[563:569],
	65366: keyName[569:577],
	65367: keyName[577:580],
	65368: keyName[580:585],
	65376: keyName[585:591],
	65406: keyName[591:601],
	65407: keyName[601:608],
	65408: keyName[608:619],
	65417: keyName[619:628],
	65421: keyName[628:639],
	65425: keyName[639:647],
	65426: keyName[647:655],
	65427: keyName[655:663],
	65428: keyName[663:671],
	65429: keyName[671:681],
	65430: keyName[681:691],
	65431: keyName[691:699],
	65432: keyName[699:710],
	65433: keyName[710:720],
	65434: keyName[720:731],
	65435: keyName[731:743],
	65436: keyName[743:753],
	65437: keyName[753:767],
	65438: keyName[767:776],
	65439: keyName[776:787],
	65440: keyName[787:799],
	65441: keyName[799:811],
	65442: keyName[811:825],
	65443: keyName[825:834],
	65444: keyName[834:849],
	65445: keyName[849:863],
	65446: keyName[863:876],
	65447: keyName[876:888],
	65448: keyName[888:895],
	65449: keyName[895:902],
	65450: keyName[902:909],
	65451: keyName[909:916],
	65452: keyName[916:923],
	65453: keyName[923:930],
	65454: keyName[930:937],
	65455: keyName[937:944],
	65456: keyName[944:951],
	65457: keyName[951:958],
	65469: keyName[958:969],
	65470: keyName[969:971],
	65471: keyName[971:973],
	65472: keyName[973:975],
	65473: keyName[975:977],
	65474: keyName[977:979],
	65475: keyName[979:981],
	65476: keyName[981:983],
	65477: keyName[983:985],
	65478: keyName[985:987],
	65479: keyName[987:990],
	65480: keyName[990:993],
	65481: keyName[993:996],
	65505: keyName[996:1005],
	65506: keyName[1005:1015],
	65507: keyName[1015:1026],
	65508: keyName[1026:1038],
	65509: keyName[1038:1046],
	65510: keyName[1046:1055],
	65511: keyName[1055:1063],
	65512: keyName[1063:1072],
	65513: keyName[1072:1079],
	65514: keyName[1079:1087],
	65515: keyName[1087:1096],
	65516: keyName[1096:1106],
	65517: keyName[1106:1115],
	65518: keyName[1115:1125],
	65535: keyName[1125:1131],
}

func (i Key) String() string {
	if str, ok := keyMap[i]; ok {
		return str
	}
	return fmt.Sprintf("Key(%d)", i)
}
