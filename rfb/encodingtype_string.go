// Code generated by "stringer -type=EncodingType"; DO NOT EDIT.

package rfb

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EncRaw-0]
	_ = x[EncCopyRect-1]
	_ = x[EncRRE-2]
	_ = x[EncCoRRE-4]
	_ = x[EncHexTile-5]
	_ = x[EncZlib-6]
	_ = x[EncTight-7]
	_ = x[EncZlibHex-8]
	_ = x[EncUltra1-9]
	_ = x[EncUltra2-10]
	_ = x[EncTRLE-15]
	_ = x[EncZRLE-16]
	_ = x[EncH264-20]
	_ = x[EncJPEG-21]
	_ = x[EncJRLE-22]
	_ = x[EncAtenAST2100-87]
	_ = x[EncAtenASTJPEG-88]
	_ = x[EncAtenHermon-89]
	_ = x[EncAtenYarkon-90]
	_ = x[EncAtenPilot3-91]
	_ = x[EncJPEGQualityLevelPseudo10 - -23]
	_ = x[EncJPEGQualityLevelPseudo9 - -24]
	_ = x[EncJPEGQualityLevelPseudo8 - -25]
	_ = x[EncJPEGQualityLevelPseudo7 - -26]
	_ = x[EncJPEGQualityLevelPseudo6 - -27]
	_ = x[EncJPEGQualityLevelPseudo5 - -28]
	_ = x[EncJPEGQualityLevelPseudo4 - -29]
	_ = x[EncJPEGQualityLevelPseudo3 - -30]
	_ = x[EncJPEGQualityLevelPseudo2 - -31]
	_ = x[EncJPEGQualityLevelPseudo1 - -32]
	_ = x[EncDesktopSizePseudo - -223]
	_ = x[EncLastRectPseudo - -224]
	_ = x[EncPointerPosPseudo - -232]
	_ = x[EncCursorPseudo - -239]
	_ = x[EncXCursorPseudo - -240]
	_ = x[EncCompressionLevel10 - -247]
	_ = x[EncCompressionLevel9 - -248]
	_ = x[EncCompressionLevel8 - -249]
	_ = x[EncCompressionLevel7 - -250]
	_ = x[EncCompressionLevel6 - -251]
	_ = x[EncCompressionLevel5 - -252]
	_ = x[EncCompressionLevel4 - -253]
	_ = x[EncCompressionLevel3 - -254]
	_ = x[EncCompressionLevel2 - -255]
	_ = x[EncCompressionLevel1 - -256]
	_ = x[EncQEMUPointerMotionChangePseudo - -257]
	_ = x[EncQEMUExtendedKeyEventPseudo - -258]
	_ = x[EncTightPng - -260]
	_ = x[EncLedStatePseudo - -261]
	_ = x[EncDesktopNamePseudo - -307]
	_ = x[EncExtendedDesktopSizePseudo - -308]
	_ = x[EncXvpPseudo - -309]
	_ = x[EncClientRedirect - -311]
	_ = x[EncFencePseudo - -312]
	_ = x[EncContinuousUpdatesPseudo - -313]
	_ = x[EncCursorWithAlphaPseudo - -314]
	_ = x[EncExtendedClipboardPseudo - -1063131698]
	_ = x[EncTightPNGBase64-1464686101]
	_ = x[EncTightDiffComp-1464686102]
	_ = x[EncVMWDefineCursor-1464686180]
	_ = x[EncVMWCursorState-1464686181]
	_ = x[EncVMWCursorPosition-1464686182]
	_ = x[EncVMWTypematicInfo-1464686183]
	_ = x[EncVMWLEDState-1464686184]
	_ = x[EncVMWServerPush2-1464686203]
	_ = x[EncVMWServerCaps-1464686202]
	_ = x[EncVMWFrameStamp-1464686204]
	_ = x[EncOffscreenCopyRect-1464686206]
}

const _EncodingType_name = "EncExtendedClipboardPseudoEncCursorWithAlphaPseudoEncContinuousUpdatesPseudoEncFencePseudoEncClientRedirectEncXvpPseudoEncExtendedDesktopSizePseudoEncDesktopNamePseudoEncLedStatePseudoEncTightPngEncQEMUExtendedKeyEventPseudoEncQEMUPointerMotionChangePseudoEncCompressionLevel1EncCompressionLevel2EncCompressionLevel3EncCompressionLevel4EncCompressionLevel5EncCompressionLevel6EncCompressionLevel7EncCompressionLevel8EncCompressionLevel9EncCompressionLevel10EncXCursorPseudoEncCursorPseudoEncPointerPosPseudoEncLastRectPseudoEncDesktopSizePseudoEncJPEGQualityLevelPseudo1EncJPEGQualityLevelPseudo2EncJPEGQualityLevelPseudo3EncJPEGQualityLevelPseudo4EncJPEGQualityLevelPseudo5EncJPEGQualityLevelPseudo6EncJPEGQualityLevelPseudo7EncJPEGQualityLevelPseudo8EncJPEGQualityLevelPseudo9EncJPEGQualityLevelPseudo10EncRawEncCopyRectEncRREEncCoRREEncHexTileEncZlibEncTightEncZlibHexEncUltra1EncUltra2EncTRLEEncZRLEEncH264EncJPEGEncJRLEEncAtenAST2100EncAtenASTJPEGEncAtenHermonEncAtenYarkonEncAtenPilot3EncTightPNGBase64EncTightDiffCompEncVMWDefineCursorEncVMWCursorStateEncVMWCursorPositionEncVMWTypematicInfoEncVMWLEDStateEncVMWServerCapsEncVMWServerPush2EncVMWFrameStampEncOffscreenCopyRect"

var _EncodingType_map = map[EncodingType]string{
	-1063131698: _EncodingType_name[0:26],
	-314:        _EncodingType_name[26:50],
	-313:        _EncodingType_name[50:76],
	-312:        _EncodingType_name[76:90],
	-311:        _EncodingType_name[90:107],
	-309:        _EncodingType_name[107:119],
	-308:        _EncodingType_name[119:147],
	-307:        _EncodingType_name[147:167],
	-261:        _EncodingType_name[167:184],
	-260:        _EncodingType_name[184:195],
	-258:        _EncodingType_name[195:224],
	-257:        _EncodingType_name[224:256],
	-256:        _EncodingType_name[256:276],
	-255:        _EncodingType_name[276:296],
	-254:        _EncodingType_name[296:316],
	-253:        _EncodingType_name[316:336],
	-252:        _EncodingType_name[336:356],
	-251:        _EncodingType_name[356:376],
	-250:        _EncodingType_name[376:396],
	-249:        _EncodingType_name[396:416],
	-248:        _EncodingType_name[416:436],
	-247:        _EncodingType_name[436:457],
	-240:        _EncodingType_name[457:473],
	-239:        _EncodingType_name[473:488],
	-232:        _EncodingType_name[488:507],
	-224:        _EncodingType_name[507:524],
	-223:        _EncodingType_name[524:544],
	-32:         _EncodingType_name[544:570],
	-31:         _EncodingType_name[570:596],
	-30:         _EncodingType_name[596:622],
	-29:         _EncodingType_name[622:648],
	-28:         _EncodingType_name[648:674],
	-27:         _EncodingType_name[674:700],
	-26:         _EncodingType_name[700:726],
	-25:         _EncodingType_name[726:752],
	-24:         _EncodingType_name[752:778],
	-23:         _EncodingType_name[778:805],
	0:           _EncodingType_name[805:811],
	1:           _EncodingType_name[811:822],
	2:           _EncodingType_name[822:828],
	4:           _EncodingType_name[828:836],
	5:           _EncodingType_name[836:846],
	6:           _EncodingType_name[846:853],
	7:           _EncodingType_name[853:861],
	8:           _EncodingType_name[861:871],
	9:           _EncodingType_name[871:880],
	10:          _EncodingType_name[880:889],
	15:          _EncodingType_name[889:896],
	16:          _EncodingType_name[896:903],
	20:          _EncodingType_name[903:910],
	21:          _EncodingType_name[910:917],
	22:          _EncodingType_name[917:924],
	87:          _EncodingType_name[924:938],
	88:          _EncodingType_name[938:952],
	89:          _EncodingType_name[952:965],
	90:          _EncodingType_name[965:978],
	91:          _EncodingType_name[978:991],
	1464686101:  _EncodingType_name[991:1008],
	1464686102:  _EncodingType_name[1008:1024],
	1464686180:  _EncodingType_name[1024:1042],
	1464686181:  _EncodingType_name[1042:1059],
	1464686182:  _EncodingType_name[1059:1079],
	1464686183:  _EncodingType_name[1079:1098],
	1464686184:  _EncodingType_name[1098:1112],
	1464686202:  _EncodingType_name[1112:1128],
	1464686203:  _EncodingType_name[1128:1145],
	1464686204:  _EncodingType_name[1145:1161],
	1464686206:  _EncodingType_name[1161:1181],
}

func (i EncodingType) String() string {
	if str, ok := _EncodingType_map[i]; ok {
		return str
	}
	return "EncodingType(" + strconv.FormatInt(int64(i), 10) + ")"
}
